trigger:
- main

variables:
  dockerRegistryServiceConnection: 'monitorsc'
  imageRepository: 'health-api'
  containerRegistry: 'monitoringacr01.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'

  # Variables passed to container
  BUILD_VERSION: 'v$(Build.BuildId)'
  GIT_COMMIT: '$(Build.SourceVersion)'
  RELEASE_ID: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: 'Build and Push Docker Image'
  jobs:
  - job: BuildAndPush
    displayName: 'Build and Push to ACR'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    - task: Docker@2
      displayName: 'Build and Push Docker image'
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        command: buildAndPush
        Dockerfile: $(dockerfilePath)
        tags: |
          $(tag)

- stage: Deploy
  displayName: 'Deploy to AKS'
  dependsOn: Build
  jobs:
  - job: DeployToAKS
    displayName: 'Generate Deployment and Apply'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    - task: PowerShell@2
      displayName: 'Transform deployment-template.yaml â†’ deployment.yaml'
      env:
        BUILD_VERSION: $(BUILD_VERSION)
        GIT_COMMIT: $(GIT_COMMIT)
        RELEASE_ID: $(RELEASE_ID)
      inputs:
        targetType: 'inline'
        script: |
          $templatePath = "$(System.DefaultWorkingDirectory)/deployment-template.yaml"
          $outputPath = "$(System.DefaultWorkingDirectory)/deployment.yaml"
          $content = Get-Content $templatePath -Raw
          $updatedContent = $content -replace '\$\((\w+)\)', { 
            param($match) 
            $envVar = $match.Groups[1].Value
            return $env:$envVar 
          }
          Set-Content -Path $outputPath -Value $updatedContent


    - task: Kubernetes@1
      displayName: 'Deploy to AKS'
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'aks0sc'
        azureResourceGroup: 'aks-rg'
        kubernetesCluster: 'aks01'
        command: apply
        useConfigurationFile: true
        configuration: 'deployment.yaml'
